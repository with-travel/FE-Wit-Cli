# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Build and export IPA for TestFlight"
  lane :build_and_export do |options|
    # 환경 변수에서 값 가져오기
    version_name = options[:version_name] || ENV["VERSION_NAME"]
    build_number = options[:build_number] || ENV["BUILD_NUMBER"]
    provisioning_profile = options[:provisioning_profile] || ENV["PROVISIONING_PROFILE_SPECIFIER"]
    
    # 버전 정보 출력
    puts "🔢 Version: #{version_name}"
    puts "🔢 Build Number: #{build_number}"
    puts "📱 Provisioning Profile: #{provisioning_profile}"
    
    # 아카이브가 이미 존재하는지 확인 (여러 경로 시도)
    possible_paths = [
      "../build/Wit.xcarchive",           # 프로젝트 루트/build
      "build/Wit.xcarchive",              # ios/build  
      File.expand_path("../build/Wit.xcarchive", Dir.pwd),  # 절대경로
      File.expand_path("build/Wit.xcarchive", Dir.pwd)      # ios 기준 절대경로
    ]
    
    archive_path = nil
    possible_paths.each do |path|
      if File.exist?(path)
        archive_path = path
        break
      end
    end
    
    if archive_path
      puts "✅ 기존 아카이브 파일을 사용합니다: #{archive_path}"
    else
      puts "❌ 아카이브 파일을 찾을 수 없습니다!"
      puts "시도한 경로들:"
      possible_paths.each { |path| puts "  - #{path}" }
      puts "현재 작업 디렉토리: #{Dir.pwd}"
      puts "디렉토리 내용:"
      puts `ls -la`
      puts "상위 디렉토리 내용:"
      puts `ls -la ..`
      UI.user_error!("Archive file not found")
    end
    
    # Export Options 동적 생성
    export_options = {
      method: "app-store-connect",
      uploadBitcode: false,
      uploadSymbols: true,
      compileBitcode: false,
      signingStyle: "manual",
      stripSwiftSymbols: true,
      teamID: "6S8WKQFV7D",
      destination: "export",
      provisioningProfiles: {
        "com.Juhkang.Wit" => provisioning_profile
      },
      signingCertificate: "Apple Distribution"
    }
    
    puts "📝 Export Options:"
    puts export_options
    
    # IPA 내보내기
    export_ipa(
      archive_path: archive_path,
      output_directory: "../build/ipa",
      export_options: export_options
    )
    
    puts "✅ IPA 내보내기 완료!"
  end
  
  desc "Upload to TestFlight"
  lane :upload_testflight do |options|
    changelog = options[:changelog] || ENV["CHANGELOG"] || "새로운 버전이 출시되었습니다."
    
    # IPA 파일 경로 확인
    ipa_path = "../build/ipa/Wit.ipa"
    unless File.exist?(ipa_path)
      UI.user_error!("IPA file not found at #{ipa_path}")
    end
    
    puts "📦 IPA 파일 확인됨: #{ipa_path}"
    puts "📝 변경사항: #{changelog}"
    
    # TestFlight 업로드
    upload_to_testflight(
      ipa: ipa_path,
      changelog: changelog,
      skip_waiting_for_build_processing: true,
      api_key_path: ENV["APP_STORE_CONNECT_API_KEY_PATH"]
    )
    
    puts "✅ TestFlight 업로드 완료!"
  end
  
  desc "Complete build and upload process"
  lane :release do |options|
    build_and_export(options)
    upload_testflight(options)
  end
end
