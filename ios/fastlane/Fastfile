# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

# ios/fastlane/Fastfile

default_platform(:ios)

platform :ios do
  desc "Upload archive directly to TestFlight (exportArchive only)"
  lane :upload_archive_to_testflight do |options|
    changelog = options[:changelog] || ENV["CHANGELOG"] || "새로운 버전이 출시되었습니다."

    puts "🚀 ========================================"
    puts "🚀 TestFlight 직접 업로드 (exportArchive)"
    puts "🚀 ========================================"
    puts "📝 변경사항: #{changelog}"

    possible_archive_paths = [
      "../../build/Wit.xcarchive",
      "../build/Wit.xcarchive",
      "build/Wit.xcarchive"
    ]
    archive_path = possible_archive_paths.find { |p| File.exist?(p) }
    UI.user_error!("Archive file not found") unless archive_path
    puts "✅ 아카이브: #{archive_path}"
    puts "📦 크기: #{`du -sh '#{archive_path}'`.strip}"

    # Export 설정
    export_dir = "../build" # 루트/build에 .ipa 나오도록
    sh "mkdir -p '#{export_dir}'"

    export_plist = "#{export_dir}/ExportOptions.plist"
    profile_name = ENV["PROVISIONING_PROFILE_SPECIFIER"] || "Wit CLI Distribution"
    team_id = "6S8WKQFV7D" # Appfile에 있는 팀 ID와 동일

    File.write(export_plist, <<~PLIST)
      <?xml version="1.0" encoding="UTF-8"?>
      <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
      <plist version="1.0">
      <dict>
        <key>method</key><string>app-store</string>
        <key>signingStyle</key><string>manual</string>
        <key>teamID</key><string>#{team_id}</string>
        <key>provisioningProfiles</key>
        <dict>
          <key>com.Juhkang.Wit</key><string>#{profile_name}</string>
        </dict>
        <key>uploadSymbols</key><true/>
        <key>uploadBitcode</key><false/>
      </dict>
      </plist>
    PLIST

    # 🔁 빌드 없이 "exportArchive"만 수행
    sh %Q[xcodebuild -exportArchive \
      -archivePath "#{archive_path}" \
      -exportPath "#{export_dir}" \
      -exportOptionsPlist "#{export_plist}" \
      -allowProvisioningUpdates]

    ipa_path = Dir["#{export_dir}/*.ipa"].first
    UI.user_error!("IPA not found after export") unless ipa_path
    puts "✅ IPA 생성: #{ipa_path}"

    upload_to_testflight(
      ipa: ipa_path,
      changelog: changelog,
      skip_waiting_for_build_processing: true,
      skip_submission: true,
      distribute_external: false,
      api_key_path: ENV["APP_STORE_CONNECT_API_KEY_PATH"]
    )

    puts "✅ TestFlight 업로드 완료!"
    puts "🚀 ========================================"
  end

  desc "Complete build and upload process"
  lane :release do
    upload_archive_to_testflight
  end
end
